; scheme interpreter examples

(define umm 
	(stream-map
		(lambda (x) (* x 2))
		(cons-stream 1 (cons-stream 1 `()))))

(stream-car umm) ; 2
(stream-car (stream-cdr umm)) ; 2
(stream-cdr (stream-cdr umm)) ; ()

; write the procedure stream-limit in 
(define (sqrt x tolerance)
	(stream-limit (sqrt-stream x) tolerance))

(define (sqrt-stream x)
	(define guesses
		(cons-stream 1.0
			(stream-map 
				(lambda (guess)
                                	(improve-guess guess x))
                            	guesses)))
	guesses)

(define (improve-guess guess x)
	(average guess (/ x guess)))

(define (average x y)
	(/ (+ x y) 2.0))